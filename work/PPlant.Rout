
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R jest oprogramowaniem darmowym i dostarczany jest BEZ JAKIEJKOLWIEK GWARANCJI.
Możesz go rozpowszechniać pod pewnymi warunkami.
Wpisz 'license()' lub 'licence()' aby uzyskać szczegóły dystrybucji.

R jest projektem kolaboracyjnym z wieloma uczestnikami.
Wpisz 'contributors()' aby uzyskać więcej informacji oraz
'citation()' aby dowiedzieć się jak cytować R lub pakiety R w publikacjach.

Wpisz 'demo()' aby zobaczyć demo, 'help()' aby uzyskać pomoc on-line, lub
'help.start()' aby uzyskać pomoc w przeglądarce HTML.
Wpisz 'q()' aby wyjść z R.

[Poprzednio zapisany obszar roboczy został przywrócony]

> library("ggplot2");
> library("dplyr")

Dołączanie pakietu: ‘dplyr’

Następujące obiekty zostały zakryte z ‘package:stats’:

    filter, lag

Następujące obiekty zostały zakryte z ‘package:base’:

    intersect, setdiff, setequal, union

> 
> d <- read.csv("global_pp_short.csv", sep = ';',  header=T, na.string="NA");
> d <- d %>% filter(grepl("GER|FRA|GBR", d$code) )  %>% as.data.frame
> 
> N <- nrow(d)
> 
> fivenum(d$capacity_mw)
[1]    1.0    2.3    5.4   12.0 5460.0
> m <- mean(d$capacity_mw, na.rm=T)
> m.min <- min(d$capacity_mw, na.rm=T)
> m.max <- max(d$capacity_mw, na.rm=T)
> m.me <- median(d$capacity_mw, na.rm=T)
> 
> s <- sd(d$capacity_mw, na.rm=T)
> allN <- nrow(d)
> dSS <- d %>% filter(capacity_mw > m - s & capacity_mw < m +s )  %>% as.data.frame
> allS <- nrow(dSS)
> p <- allS/allN * 100
> 
> ## rozkład
> ggplot(d, aes(x = capacity_mw)) + geom_histogram(binwidth = 1) +
+   geom_vline(xintercept = m, colour="forestgreen", size=2) +
+   geom_vline(xintercept = m - 3 * s, colour="forestgreen", size=1) +
+   geom_vline(xintercept = m + 3 * s, colour="forestgreen", size=1) +
+   geom_vline(xintercept = m - 1 * s, colour="forestgreen", size=1) +
+   geom_vline(xintercept = m + 1 * s, colour="forestgreen", size=1) +
+   ggtitle("Moc elektrowni w GER/FRA/GBR 2019", subtitle=sprintf("N=%d", N)) +
+   annotate("text", x=2000, y=100, label=sprintf("śr=%.2f s=%.2f śr+/-s%%=%.2f", m, s, p), size=5, color="red", hjust=0) +
+   annotate("text", x=2000, y=60, label=sprintf("min=%.2f max=%.2f me=%.2f", m.min, m.max, m.me), size=5, color="red", hjust=0)
> 
> ggsave("PPlant.png")
Saving 7 x 7 in image
> 
> proc.time()
użytkownik     system   upłynęło 
    10.901      0.105     11.159 
